variables:
  PRISMA_API_URL: <https://api.prismacloud.io>

trigger:
  branches:
    include:
    - main
    exclude:
      - README.md
  
stages:
  - stage: Test
    displayName: Test
    jobs:
    - job: init
      displayName: Terraform testing
      pool:
        vmImage: ubuntu-latest
      steps:
        - script: terraform init
          displayName:  Terraform init
          workingDirectory: '$(System.DefaultWorkingDirectory)'
          env:
            ARM_CLIENT_ID: $(appId)
            ARM_CLIENT_SECRET: $(password)
            ARM_SUBSCRIPTION_ID: $(id)
            ARM_TENANT_ID: $(tenant)

        - script: terraform plan --out tfplan.binary && terraform show -json tfplan.binary | jq > tfplan.json
          displayName:  Terraform plan
          workingDirectory: '$(System.DefaultWorkingDirectory)'
          env:
            ARM_CLIENT_ID: $(appId)
            ARM_CLIENT_SECRET: $(password)
            ARM_SUBSCRIPTION_ID: $(id)
            ARM_TENANT_ID: $(tenant)
        - task: AzureKeyVault@2
          inputs:
            azureSubscription: 'pipeline-connection'
            keyVaultName: 'ts-pipeline-vault'
            secretsFilter: '*'
            runAsPreJob: false
        - task: UsePythonVersion@0
          inputs:
            versionSpec: 3.8
          displayName: 'Use Python 3.8'
        - script: pip install checkov
          displayName: Install Checkov
        - script: checkov -d . --use-enforcement-rules --bc-api-key $(prisma-access-key)::$(prisma-secret-key) --repo-id prismaiac/tfplangoat --branch main -o cli -o junitxml --output-file-path console,CheckovReport.xml
          workingDirectory: $(System.DefaultWorkingDirectory)
          displayName: Run Checkov
        - task: PublishTestResults@2
          inputs:
            testResultsFormat: 'JUnit'
            testResultsFiles: '**/CheckovReport.xml'
            testRunTitle: PrismaCloudTests
          displayName: Publish Test Results
          condition: always()