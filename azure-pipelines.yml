#variables:
#  - name: ARM_TENANT_ID
#    value: $(tenant)
#  - name: ARM_CLIENT_ID
#    value: $(appId)
#  - name: ARM_CLIENT_SECRET
#    value: $(password)
#  - name: ARM_SUBSCRIPTION_ID
#    value: $(id)

trigger:
  branches:
    include:
    - main
    exclude:
      - README.md
  
stages:
  - stage: Validate
    displayName: Validate
    jobs:
    - job: init
      displayName: Terraform validate
      pool:
        vmImage: ubuntu-latest
      steps:
      - task: PowerShell@2
        inputs:
          targetType: 'inline'
          script: |
            $env:ARM_TENANT_ID=${env:TENANT}
            $env:ARM_CLIENT_ID=${env:APPID}
            $env:ARM_CLIENT_SECRET=${env:PASSWORD}
            $env:ARM_SUBSCRIPTION_ID=${env:ID}
            terraform init
            terraform plan --out tfplan.binary
            terraform show -json tfplan.binary | jq > tfplan.json
          workingDirectory: '$(build.sourcesdirectory)'
        displayName: Terraform init
      - task: Bash@3
        inputs:
          targetType: 'inline'
          script: |
            pip install checkov
            checkov -f tfplan.json > scan-results.xml
        displayName: Checkov
        continueOnError: true
      - task: PublishTestResults@2
        inputs:
          testResultsFormat: 'JUnit'
          searchFolder: '$(System.DefaultWorkingDirectory)'
          testResultsFiles: '**/*scan-result.xml'
          mergeTestResults: false
          testRunTitle: Terraform source code scan
          failTaskOnFailedTests: false
          publishRunAttachments: true
        displayName: Publish Test Result