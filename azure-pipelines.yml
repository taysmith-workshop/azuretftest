trigger:
  branches:
    include:
    - main
    exclude:
      - README.md
  
stages:
  - stage: Test
    displayName: Test
    jobs:
    - job: init
      displayName: Terraform testing
      pool:
        vmImage: ubuntu-latest
      steps:
        - script: terraform init
          displayName:  Terraform init
          workingDirectory: '$(System.DefaultWorkingDirectory)'
          env:
            ARM_CLIENT_ID: $(appId)
            ARM_CLIENT_SECRET: $(password)
            ARM_SUBSCRIPTION_ID: $(id)
            ARM_TENANT_ID: $(tenant)

        - script: terraform plan --out tfplan.binary && terraform show -json tfplan.binary | jq > tfplan.json
          displayName:  Terraform plan
          workingDirectory: '$(System.DefaultWorkingDirectory)'
          env:
            ARM_CLIENT_ID: $(appId)
            ARM_CLIENT_SECRET: $(password)
            ARM_SUBSCRIPTION_ID: $(id)
            ARM_TENANT_ID: $(tenant)
        - task: Bash@3
          inputs:
            targetType: 'inline'
            script: |
              pip install checkov
              checkov -f tfplan.json > scan-results.xml
          displayName: Checkov
          continueOnError: true
        - task: PublishTestResults@2
          inputs:
            testResultsFormat: 'JUnit'
            searchFolder: '$(System.DefaultWorkingDirectory)'
            testResultsFiles: '**/*scan-result.xml'
            mergeTestResults: false
            testRunTitle: Terraform source code scan
            failTaskOnFailedTests: false
            publishRunAttachments: true
          displayName: Publish Test Result